////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : HEX2SEG.vf
// /___/   /\     Timestamp : 11/09/2020 17:10:48
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/62010472/Documents/XilingLAB/Door2047/HEX2SEG.vf -w C:/Users/62010472/Documents/XilingLAB/Door2047/HEX2SEG.sch
//Design Name: HEX2SEG
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module D4_16E_HXILINX_HEX2SEG (D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, A0, A1, A2, A3, E);
    

   output D0;
   output D1;
   output D2;
   output D3;
   output D4;
   output D5;
   output D6;
   output D7;
   output D8;
   output D9;
   output D10;
   output D11;
   output D12;
   output D13;
   output D14;
   output D15;

   input  A0;
   input  A1;
   input  A2;
   input  A3;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;
   reg D4;
   reg D5;
   reg D6;
   reg D7;
   reg D8;
   reg D9;
   reg D10;
   reg D11;
   reg D12;
   reg D13;
   reg D14;
   reg D15;

      always @ (A0 or A1 or A2 or A3 or E)
      begin
         if(!E)
           {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0000;
        else
        begin
           case({A3,A2,A1,A0})
             4'b0000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0001;
             4'b0001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0010;
             4'b0010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_0100;
             4'b0011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0000_1000;
             4'b0100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0001_0000;
             4'b0101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0010_0000;
             4'b0110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_0100_0000;
             4'b0111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0000_1000_0000;
             4'b1000 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0001_0000_0000;
             4'b1001 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0010_0000_0000;
             4'b1010 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_0100_0000_0000;
             4'b1011 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0000_1000_0000_0000;
             4'b1100 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0001_0000_0000_0000;
             4'b1101 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0010_0000_0000_0000;
             4'b1110 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b0100_0000_0000_0000;
             4'b1111 :  {D15, D14, D13, D12, D11, D10, D9, D8, D7, D6, D5, D4, D3, D2, D1, D0} <= 16'b1000_0000_0000_0000;
          endcase
        end
     end 

endmodule
`timescale  100 ps / 10 ps

module OR6_HXILINX_HEX2SEG (O, I0, I1, I2, I3, I4, I5);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;

assign O = (I0 || I1 || I2 || I3 || I4 || I5);

endmodule
`timescale 1ns / 1ps

module HEX2SEG(hex_in, 
               SEG);

    input [3:0] hex_in;
   output [6:0] SEG;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   
   OR4  jkhbbshcac (.I0(XLXN_4), 
                   .I1(XLXN_7), 
                   .I2(XLXN_16), 
                   .I3(XLXN_14), 
                   .O(XLXN_20));
   (* HU_SET = "XLXI_1_13" *) 
   D4_16E_HXILINX_HEX2SEG  XLXI_1 (.A0(hex_in[0]), 
                                  .A1(hex_in[1]), 
                                  .A2(hex_in[2]), 
                                  .A3(hex_in[3]), 
                                  .E(XLXN_2), 
                                  .D0(XLXN_3), 
                                  .D1(XLXN_4), 
                                  .D2(XLXN_5), 
                                  .D3(XLXN_6), 
                                  .D4(XLXN_7), 
                                  .D5(XLXN_12), 
                                  .D6(XLXN_11), 
                                  .D7(XLXN_10), 
                                  .D8(), 
                                  .D9(XLXN_8), 
                                  .D10(XLXN_17), 
                                  .D11(XLXN_16), 
                                  .D12(XLXN_15), 
                                  .D13(XLXN_14), 
                                  .D14(XLXN_13), 
                                  .D15(XLXN_18));
   VCC  XLXI_2 (.P(XLXN_2));
   OR4  XLXI_5 (.I0(XLXN_5), 
               .I1(XLXN_15), 
               .I2(XLXN_13), 
               .I3(XLXN_18), 
               .O(XLXN_22));
   (* HU_SET = "XLXI_6_14" *) 
   OR6_HXILINX_HEX2SEG  XLXI_6 (.I0(XLXN_12), 
                               .I1(XLXN_11), 
                               .I2(XLXN_16), 
                               .I3(XLXN_15), 
                               .I4(XLXN_13), 
                               .I5(XLXN_18), 
                               .O(XLXN_21));
   OR5  XLXI_7 (.I0(XLXN_4), 
               .I1(XLXN_7), 
               .I2(XLXN_10), 
               .I3(XLXN_17), 
               .I4(XLXN_18), 
               .O(XLXN_23));
   (* HU_SET = "XLXI_8_15" *) 
   OR6_HXILINX_HEX2SEG  XLXI_8 (.I0(XLXN_4), 
                               .I1(XLXN_6), 
                               .I2(XLXN_7), 
                               .I3(XLXN_12), 
                               .I4(XLXN_10), 
                               .I5(XLXN_8), 
                               .O(XLXN_24));
   OR5  XLXI_9 (.I0(XLXN_4), 
               .I1(XLXN_5), 
               .I2(XLXN_6), 
               .I3(XLXN_10), 
               .I4(XLXN_14), 
               .O(XLXN_25));
   OR4  XLXI_10 (.I0(XLXN_3), 
                .I1(XLXN_4), 
                .I2(XLXN_10), 
                .I3(XLXN_15), 
                .O(XLXN_26));
   INV  XLXI_11 (.I(XLXN_20), 
                .O(SEG[0]));
   INV  XLXI_12 (.I(XLXN_21), 
                .O(SEG[1]));
   INV  XLXI_13 (.I(XLXN_22), 
                .O(SEG[2]));
   INV  XLXI_14 (.I(XLXN_23), 
                .O(SEG[3]));
   INV  XLXI_15 (.I(XLXN_24), 
                .O(SEG[4]));
   INV  XLXI_16 (.I(XLXN_25), 
                .O(SEG[5]));
   INV  XLXI_17 (.I(XLXN_26), 
                .O(SEG[6]));
endmodule
